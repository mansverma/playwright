<<<<<<< HEAD
version: 2.1

# Define executors for different environments
executors:
  playwright-executor:
    docker:
      - image: mcr.microsoft.com/playwright:v1.40.0-focal
    working_directory: ~/project
    environment:
      NODE_ENV: test
      CI: true

# Define reusable commands
commands:
  install_dependencies:
    description: "Install Node.js dependencies"
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

  run_playwright_tests:
    description: "Run Playwright tests"
    parameters:
      project:
        type: string
        default: ""
    steps:
      - run:
          name: Run Playwright Tests<< parameters.project >>
          command: |
            << #parameters.project >>npx playwright test --project="<< parameters.project >>"<< /parameters.project >>
            << ^parameters.project >>npx playwright test<< /parameters.project >>
          environment:
            PLAYWRIGHT_BROWSERS_PATH: /ms-playwright

# Define jobs
jobs:
  # Job to run all tests
  test-all:
    executor: playwright-executor
    steps:
      - checkout
      - install_dependencies
      - run_playwright_tests
      - store_artifacts:
          path: playwright-report/
          destination: playwright-report
      - store_artifacts:
          path: test-results/
          destination: test-results
      - store_test_results:
          path: test-results/

  # Job to run only desktop tests
  test-desktop:
    executor: playwright-executor
    steps:
      - checkout
      - install_dependencies
      - run_playwright_tests:
          project: "Desktop Chrome"
      - run_playwright_tests:
          project: "Desktop Safari"
      - store_artifacts:
          path: playwright-report/
          destination: playwright-report-desktop
      - store_artifacts:
          path: test-results/
          destination: test-results-desktop

  # Job to run only mobile tests
  test-mobile:
    executor: playwright-executor
    steps:
      - checkout
      - install_dependencies
      - run_playwright_tests:
          project: "Mobile Chrome"
      - run_playwright_tests:
          project: "Mobile Safari"
      - store_artifacts:
          path: playwright-report/
          destination: playwright-report-mobile
      - store_artifacts:
          path: test-results/
          destination: test-results-mobile

# Define workflows
workflows:
  version: 2
  test-workflow:
    jobs:
      # Run all tests on main branch
      - test-all:
          filters:
            branches:
              only:
                - main
                - master
      
      # Run parallel desktop and mobile tests on feature branches
      - test-desktop:
          filters:
            branches:
              ignore:
                - main
                - master
      - test-mobile:
          filters:
            branches:
              ignore:
                - main
                - master

  # Nightly workflow to run full test suite
  nightly-tests:
    triggers:
      - schedule:
          cron: "0 2 * * *" # Run at 2 AM UTC daily
          filters:
            branches:
              only:
                - main
                - master
    jobs:
      - test-all
=======
# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/reference/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/guides/orchestrate/jobs-steps/#jobs-overview & https://circleci.com/docs/reference/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/guides/execution-managed/executor-intro/ & https://circleci.com/docs/reference/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:current

    # Add steps to the job
    # See: https://circleci.com/docs/guides/orchestrate/jobs-steps/#steps-overview & https://circleci.com/docs/reference/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/guides/orchestrate/workflows/ & https://circleci.com/docs/reference/configuration-reference/#workflows
workflows:
  say-hello-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - say-hello
>>>>>>> 7c7a47ebcc0908c0d6779ba9a458b5a1a5744b65
